version: '3.8'

services:
  communication.tech.gateway:
    build:
      context: .
      dockerfile: Communication.Tech.Gateway/Dockerfile
    ports:
      - "6060:6060"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_RUNNING_IN_CONTAINER=true
      - Kafka__BootstrapServers=kafka:9092
      - RabbitMQ__HostName=rabbitmq
      - Redis__ConnectionString=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - tech-net
    restart: unless-stopped

  communication.tech.server:
    build:
      context: .
      dockerfile: Communication.Tech.Server/Dockerfile
    ports:
      - "6061:6061"
      - "6062:6013"
      - "5277:5276"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_RUNNING_IN_CONTAINER=true
      - Kafka__BootstrapServers=kafka:9092
      - RabbitMQ__HostName=rabbitmq
      - Redis__ConnectionString=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - tech-net
    restart: unless-stopped

  communication.tech.consumer:
    build:
      context: .
      dockerfile: Communication.Tech.Consumer/Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_RUNNING_IN_CONTAINER=true
      - Kafka__BootstrapServers=kafka:9092
      - RabbitMQ__HostName=rabbitmq
      - Redis__ConnectionString=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - tech-net
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - communication.tech.gateway
      - communication.tech.consumer
      - redis-exporter
      - kafka-exporter
      - rabbitmq-exporter
    networks:
      - tech-net
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - tech-net
    restart: unless-stopped

  redis-exporter:
    image: oliver006/redis_exporter:latest
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis:6379
    networks:
      - tech-net
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - tech-net
    restart: unless-stopped

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter:latest
    ports:
      - "9419:9419"
    environment:
      - RABBITMQ_URL=http://guest:guest@rabbitmq:15672/
    networks:
      - tech-net
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_LOG_RETENTION_HOURS: 168
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms256m"
    networks:
      - tech-net
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    ports:
      - "9308:9308"
    environment:
      - KAFKA_SERVER=kafka:9092
    networks:
      - tech-net
    restart: unless-stopped

networks:
  tech-net:
    driver: bridge

volumes:
  prometheus_data: