version: '3.8'

services:
  communication.tech.gateway:
    build:
      context: .
      dockerfile: Communication.Tech.Gateway/Dockerfile
    ports:
      - "6060:5059"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5059
      - DOTNET_RUNNING_IN_CONTAINER=true
      - Kafka__BootstrapServers=kafka:9092
      - RabbitMQ__HostName=rabbitmq
      - Redis__ConnectionString=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - tech-net
    restart: unless-stopped
  
  communication.tech.server:
    build:
      context: .
      dockerfile: Communication.Tech.Server/Dockerfile
    ports:
      - "6061:5060"  # HTTP
      - "6062:6013"  # gRPC
      - "5277:5276"  # WebSocket
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5060
      - DOTNET_RUNNING_IN_CONTAINER=true
      - Kestrel__Endpoints__Http__Url=http://+:5060
      - Kestrel__Endpoints__Grpc__Url=http://+:6013
      - Kestrel__Endpoints__WebSocket__Url=http://+:5276
      - Kafka__BootstrapServers=kafka:9092
      - RabbitMQ__HostName=rabbitmq
      - Redis__ConnectionString=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - tech-net
    restart: unless-stopped

  communication.tech.consumer:
    build:
      context: .
      dockerfile: Communication.Tech.Consumer/Dockerfile
    ports:
      - "8080:80"  # Host port değiştirildi çakışma olmasın
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - DOTNET_RUNNING_IN_CONTAINER=true
      - Kafka__BootstrapServers=kafka:9092
      - RabbitMQ__HostName=rabbitmq
      - Redis__ConnectionString=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - tech-net
    restart: unless-stopped

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - communication.tech.gateway
      - communication.tech.consumer
    networks:
      - tech-net
    restart: unless-stopped

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - tech-net
    restart: unless-stopped

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"  # Web UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - tech-net
    restart: unless-stopped

  # Kafka (KRaft mode - Zookeeper yok)
  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    environment:
      # KRaft Mode Configuration
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      
      # Listener Configuration
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      
      # Other settings
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_LOG_RETENTION_HOURS: 168
      
      # Memory optimization for t3.small
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms256m"
    
    networks:
      - tech-net
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

networks:
  tech-net:
    driver: bridge